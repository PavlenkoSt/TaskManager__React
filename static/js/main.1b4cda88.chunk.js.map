{"version":3,"sources":["Components/Calendar/Table/Head/Head.module.css","Components/Calendar/Table/Table.module.css","Components/Day/Day.module.css","Components/TaskList/TaskListTable/TaskListTable.module.css","Components/TaskList/TaskList.module.css","Components/Day/TaskForm/TaskForm.module.css","Components/TaskList/TaskListSetting/TaskListSetting.module.css","Components/common/Pagination/Pagination.module.css","Components/Calendar/Table/Head/Nav/Nav.module.css","Components/Calendar/Table/Body/Body.jsx","Components/Calendar/Table/Body/Item/Item.jsx","Components/Calendar/Table/Body/Item/ItemContainer.jsx","Components/Calendar/Table/Body/BodyContainer.jsx","Components/Calendar/Table/Head/Nav/Nav.jsx","Components/Calendar/Table/Head/Head.jsx","Components/Calendar/Table/Table.jsx","helpers/currentDate.js","localStore/localStore.js","Redux/calendarReducer.js","Components/Menu/Search/Search.jsx","Components/Menu/Menu.jsx","Components/Calendar/Calendar.jsx","helpers/dateMonthMinusOne.js","Components/Day/TaskItem/TaskItem.jsx","Components/Day/TasksTable/TasksTable.jsx","helpers/datePanelChangeDay.js","Components/Day/DatePanel/DatePanel.jsx","Components/Day/TaskForm/TaskForm.jsx","Components/Day/Day.jsx","Components/Day/DayContainer.jsx","Components/TaskList/TaskListHeader/TaskListHeader.jsx","Components/TaskList/TaskListTable/TaskListTable.jsx","Components/TaskList/TaskListForm/TaskListForm.jsx","Components/TaskList/TaskListSetting/TaskListFilter/TaskListFilter.jsx","Components/TaskList/TaskListSetting/TaskListSort/TaskListSort.jsx","Components/TaskList/TaskListSetting/TaskListSetting.jsx","Components/common/Pagination/Pagination.jsx","Components/common/Pagination/PaginationContainer.jsx","Components/TaskList/TaskList.jsx","helpers/removeZeroFromDate.js","helpers/addZeroToTime.js","helpers/addZeroToDate.js","Components/TaskList/TaskListItem/TaskListItem.jsx","helpers/dateMonthPlusOne.js","Components/TaskList/TaskListContainer.jsx","helpers/filterAndSortRecords.js","helpers/mergeRecordsForPagination.js","App.js","reportWebVitals.js","Redux/reduxStore.js","index.js","Components/Calendar/Table/Body/Item/Item.module.css","Components/Day/TaskItem/TaskItem.module.css","Components/Day/DatePanel/DatePanel.module.css","Components/Calendar/Table/Body/Body.module.css","Components/Menu/Search/Search.module.css","Components/Menu/Menu.module.css","Components/TaskList/TaskListHeader/TaskListHeader.module.css","Components/Day/TasksTable/TasksTable.module.css"],"names":["module","exports","Body","getValidCalendar","className","s","tbody","Item","day","activeDate","tasks","currentDayClass","deadlineClass","link","to","year","month","mobile","tdChild","ItemContainer","currentDate","searchTasks","current","cell","Date","deadline","BodyContainer","firstDayOfActiveMonth","lastDayNumberOfActiveMonth","records","taskItem","forEach","record","date","split","recordYear","recordMonth","recordDay","push","text","time","completed","id","length","completedUlClass","every","task","completedUl","map","list","getEmptyEnd","days","Math","round","items","arr","i","splice","filter","group","groupedCalendar","condition","unshift","getEmptyStart","getDays","Nav","dateNamesList","changeActiveMonth","monthClass","winter","spring","summer","autumn","btnCell","prev","onClick","colSpan","header","months","Head","head","sunday","Table","table","getFullYear","getMonth","getDate","addToLocalStore","name","data","json","JSON","stringify","localStorage","setItem","CHANGE_ACTIVE_MONTH","CHANGE_COMPLETED_STATUS_OF_RECORD","DELETE_RECORD","ADD_NEW_RECORD","CHANGE_ACTIVE_DATE_TO_CURRENT_DATE","SET_TOTAL_COUNT","SET_CURRENT_PAGE","CHANGE_ACTIVE_MONTH_AND_YEAR","CHANGE_SETTINGS","SYNCHRONIZE_RECORD_LIST_FROM_LOCAL_STORAGE","changeCompletedStatusOfRecord","status","type","deleteRecord","addNewRecord","initialValue","monthsForDay","settings","sort","totalCount","countOnPage","currentPage","portionsSize","calendarReducer","state","action","newRecords","recordsWithoutDelete","recordsWithNewRecord","recordList","compose","reduxForm","form","initialize","handleSubmit","useEffect","options","value","onSubmit","Field","component","input","placeholder","btn","Menu","props","handleStateChange","setState","menuOpen","isOpen","closeMenu","getCurrentDate","changeActiveDateToCurrentDate","formData","changeActiveMonthAndYear","getToast","success","autoClose","toast","error","onStateChange","getLinkAdressForTodayTasks","configure","this","customBurgerIcon","src","alt","outerContainer","pageWrapId","React","Component","connect","calendar","getDay","join","TaskItem","notCompleted","onChange","checked","remove","TasksTable","dateProp","plusMode","resYear","resMonth","resDay","DatePanel","monthNames","main","arrPrev","datePanelChangeDay","arrNext","btnCollapsed","data-bs-toggle","href","role","aria-expanded","aria-controls","htmlFor","submit","Day","correctDate","noTasks","reset","location","pathname","match","dateMonthMinusOne","now","TaskListHeader","toCalendar","TaskListTable","TaskListFilter","block","for","TaskListSort","select","btnToggle","flex","Pagination","paginations","currentPortion","changeCurrentPortion","totalPortionsCount","leftPointPortion","rightPointPortion","pagination","portionChange","PaginationContainer","setCurrentPage","pagesCount","ceil","active","useState","TaskList","onSubmitSetting","noRecords","el","timeItem","reverse","TaskListItem","setTotalCount","recordsLength","dateMonthPlusOne","correctDateToShow","addZeroToDate","changeSettings","filteredRecords","tasksWithPaginationClassify","timer","setInterval","setTime","addZeroToTime","getHours","getMinutes","setDate","clearInterval","a","b","filterAndSortRecords","portionCount","obj","Object","assign","countIteration","res","j","item","mergeRecordsForPagination","removeZeroFromDate","synchronizeRecordListFromLocalStorage","withRouter","getItem","parse","getFromLocalStore","path","exact","Calendar","DayContainer","TaskListContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b4cda88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"days\":\"Head_days__1J8IO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3WXIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noTasks\":\"Day_noTasks__2z6dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TaskListTable_table__1_KEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noRecords\":\"TaskList_noRecords__1VOOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__3ff22\",\"btnCollapsed\":\"TaskForm_btnCollapsed__2y70J\",\"input\":\"TaskForm_input__3d0H8\",\"submit\":\"TaskForm_submit__1XgUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnToggle\":\"TaskListSetting_btnToggle__2TVZV\",\"form\":\"TaskListSetting_form__1tLoF\",\"flex\":\"TaskListSetting_flex__2RGG-\",\"header\":\"TaskListSetting_header__2HUc4\",\"select\":\"TaskListSetting_select__2-zSZ\",\"btn\":\"TaskListSetting_btn__1JFAq\",\"block\":\"TaskListSetting_block__1TStb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3j_7i\",\"btn\":\"Pagination_btn__28cAz\",\"active\":\"Pagination_active__2AT0Z\",\"portionChange\":\"Pagination_portionChange__3pJpJ\",\"prev\":\"Pagination_prev__1on_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Nav_header__1jXBY\",\"text\":\"Nav_text__2vB2N\",\"winter\":\"Nav_winter__1ywzf\",\"spring\":\"Nav_spring__3amFg\",\"summer\":\"Nav_summer__1j-jA\",\"autumn\":\"Nav_autumn__3pN4L\",\"month\":\"Nav_month__1xaia\",\"btnCell\":\"Nav_btnCell__3zfca\",\"prev\":\"Nav_prev__2u6r4\"};","import s from './Body.module.css'\r\n\r\nconst Body = ({ getValidCalendar }) => {\r\n    return (\r\n        <tbody className={s.tbody}>\r\n            {getValidCalendar()}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Body","import { NavLink } from 'react-router-dom'\r\nimport s from './Item.module.css'\r\n\r\nconst Item = ({ day, activeDate, tasks, currentDayClass, deadlineClass}) => {\r\n    return (\r\n        <td className={currentDayClass}>\r\n            <NavLink className={s.link} to={`/day/${activeDate.year}.${activeDate.month + 1}.${day}`}></NavLink>\r\n            <span className={s.day}>{day}</span>\r\n            <NavLink to={`/day/${activeDate.year}.${activeDate.month + 1}.${day}`}>\r\n                <span className={` ${s.mobile}`}>{day}</span>\r\n                <div className={`${(tasks ? s.tdChild : null)} ${deadlineClass}`}>\r\n                    {tasks}\r\n                </div>\r\n            </NavLink>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Item","import Item from \"./Item\"\r\nimport s from './Item.module.css'\r\n\r\nconst ItemContainer = ({ day, activeDate, currentDate, searchTasks}) => {\r\n    const currentDayClass = (activeDate.year === currentDate.year && activeDate.month === currentDate.month && currentDate.day === day) ? s.current : s.cell\r\n\r\n    const realyDate = new Date(currentDate.year, currentDate.month, currentDate.day)\r\n    const dayDate = new Date(activeDate.year, activeDate.month, day)\r\n \r\n    const deadlineClass = realyDate - dayDate > 0 ? s.deadline : ''\r\n\r\n    const tasks = searchTasks(day)\r\n\r\n    return <Item day={day} activeDate={activeDate} tasks={tasks} currentDayClass={currentDayClass} deadlineClass={deadlineClass} />\r\n}\r\n\r\nexport default ItemContainer","import Body from \"./Body\"\r\nimport s from './Body.module.css'\r\nimport ItemContainer from \"./Item/ItemContainer\"\r\n\r\nconst BodyContainer = ({ firstDayOfActiveMonth, lastDayNumberOfActiveMonth, activeDate, records, currentDate }) => {\r\n\r\n    const getEmptyStart = items => {\r\n        const condition = firstDayOfActiveMonth === 0 ? 6 : firstDayOfActiveMonth - 1\r\n        for(let i = 1 ; i<= condition; i++){\r\n            items.unshift(<td key={i - 1000}></td>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    const searchTasks = day => {\r\n        let tasks = []\r\n        records.forEach(record => {\r\n            const [recordYear, recordMonth, recordDay] = record.date.split('.')\r\n            if( +recordYear === activeDate.year && +recordMonth === activeDate.month && +recordDay === +day ){\r\n                tasks.push({\r\n                    text: record.text,\r\n                    time: record.time,\r\n                    completed: record.completed,\r\n                    id: record.id\r\n                })\r\n            }\r\n        })\r\n        \r\n        let taskItem\r\n        if(tasks.length){\r\n            const completedUlClass = tasks.every(task => task.completed) ? s.completedUl : ' '\r\n            taskItem = tasks.map(task => <li className={task.completed ? s.completed : ''} key={task.id}><span>{task.text}</span> - <span>{task.time}</span></li>)\r\n            return <ul className={s.list + ' ' + completedUlClass}>{taskItem}</ul>\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    const getDays = () => {\r\n        const days = []\r\n        for(let i = 1 ; i <= lastDayNumberOfActiveMonth; i++){\r\n            days.push(i)\r\n        }\r\n        return days.map(day => <ItemContainer \r\n            key={day}\r\n            currentDate={currentDate}\r\n            day={day}\r\n            activeDate={activeDate}\r\n            searchTasks={searchTasks}\r\n            />\r\n        )\r\n    }\r\n\r\n    const getEmptyEnd = days => {\r\n        if(days.length / 7 === Math.round(days.length / 7)){\r\n            return days\r\n        }else{\r\n            days.push(<td key={days.length + 1000} ></td>)\r\n            getEmptyEnd(days)\r\n        }\r\n        return days\r\n    }\r\n\r\n    const groupedCalendar = items => {\r\n        const arr = []\r\n        for(let i = 1; i <= 6; i++){\r\n            arr.push(items.splice(0, 7))\r\n        }\r\n        return arr.filter(group => group.length).map((group, i) => <tr key={i} >{group}</tr>)\r\n    }\r\n\r\n    const getValidCalendar = () => {\r\n        return groupedCalendar(\r\n            getEmptyEnd(\r\n                getEmptyStart(\r\n                    getDays()\r\n                )\r\n            )\r\n        )\r\n    }\r\n\r\n    return <Body getValidCalendar={getValidCalendar}/>\r\n}\r\n\r\nexport default BodyContainer","import s from './Nav.module.css'\r\n\r\nconst Nav = ({ activeDate, dateNamesList, changeActiveMonth }) => {\r\n\r\n    const monthClass = (activeDate.month === 11 || activeDate.month < 2) \r\n        ? s.winter : (activeDate.month >= 2 && activeDate.month < 5) \r\n        ? s.spring : (activeDate.month >= 5 && activeDate.month < 8)\r\n        ? s.summer : s.autumn\r\n\r\n    return (\r\n        <tr>\r\n            <td className={`${s.btnCell} ${s.prev}`}>\r\n                <button onClick={() => changeActiveMonth(activeDate.month - 1)}>Назад</button>\r\n            </td>\r\n            <td colSpan='5' className={`${s.header} ${monthClass}`} >\r\n                <div className={s.text} >\r\n                    <span className={s.month} >{dateNamesList.months[activeDate.month]}</span>\r\n                    <span>{activeDate.year}</span>\r\n                </div>\r\n            </td>\r\n            <td className={s.btnCell}>\r\n                <button onClick={() => changeActiveMonth(activeDate.month + 1)}>Вперед</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Nav","import Nav from \"./Nav/Nav\"\r\nimport s from './Head.module.css'\r\n\r\nconst Head = ({ dateNamesList, activeDate, changeActiveMonth }) => {\r\n\r\n    const getDays = () => {\r\n        const head = dateNamesList.days.map(day => <td key={day} >{day}</td>)\r\n        const sunday = head.splice(0, 1)\r\n        head.push(sunday)\r\n        return head\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <Nav activeDate={activeDate} dateNamesList={dateNamesList} changeActiveMonth={changeActiveMonth} />\r\n            <tr className={s.days}>\r\n                {getDays()}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default Head","import BodyContainer from \"./Body/BodyContainer\"\r\nimport Head from \"./Head/Head\"\r\nimport s from './Table.module.css'\r\n\r\nconst Table = ({ activeDate, dateNamesList, firstDayOfActiveMonth, lastDayNumberOfActiveMonth, changeActiveMonth, records, currentDate }) => {\r\n\r\n    return (\r\n        <table className={s.table}>\r\n            <Head \r\n                dateNamesList={dateNamesList}\r\n                activeDate={activeDate}\r\n                changeActiveMonth={changeActiveMonth}\r\n            />\r\n            <BodyContainer \r\n                activeDate={activeDate}\r\n                firstDayOfActiveMonth={firstDayOfActiveMonth} \r\n                lastDayNumberOfActiveMonth={lastDayNumberOfActiveMonth} \r\n                records={records}\r\n                currentDate={currentDate}\r\n                />\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","export default () => {\r\n    const date = new Date()\r\n    return {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate()\r\n    }\r\n}","export const addToLocalStore = (name, data) => {\r\n    const json = JSON.stringify(data)\r\n    localStorage.setItem(name, json)\r\n}\r\n\r\nexport const getFromLocalStore = (name) => {\r\n    const json = localStorage.getItem(name)\r\n    return JSON.parse(json)\r\n}","import currentDate from \"../helpers/currentDate\"\r\nimport { addToLocalStore } from \"../localStore/localStore\"\r\n\r\nconst CHANGE_ACTIVE_MONTH = 'CHANGE_ACTIVE_MONTH'\r\nconst CHANGE_COMPLETED_STATUS_OF_RECORD = 'CHANGE_COMPLETED_STATUS_OF_RECORD'\r\nconst DELETE_RECORD = 'DELETE_RECORD'\r\nconst ADD_NEW_RECORD = 'ADD_NEW_RECORD'\r\nconst CHANGE_ACTIVE_DATE_TO_CURRENT_DATE = 'CHANGE_ACTIVE_DATE_TO_CURRENT_DATE'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst CHANGE_ACTIVE_MONTH_AND_YEAR = 'CHANGE_ACTIVE_MONTH_AND_YEAR'\r\nconst CHANGE_SETTINGS = 'CHANGE_SETTINGS'\r\nconst SYNCHRONIZE_RECORD_LIST_FROM_LOCAL_STORAGE = 'SYNCHRONIZE_RECORD_LIST_FROM_LOCAL_STORAGE'\r\n\r\nexport const changeActiveMonth = month => ({ type: CHANGE_ACTIVE_MONTH, month })\r\nexport const changeCompletedStatusOfRecord = (id, status) => ({ type: CHANGE_COMPLETED_STATUS_OF_RECORD, id, status })\r\nexport const deleteRecord = id => ({ type: DELETE_RECORD, id })\r\nexport const addNewRecord = record => ({ type: ADD_NEW_RECORD, record })\r\nexport const changeActiveDateToCurrentDate = () => ({ type: CHANGE_ACTIVE_DATE_TO_CURRENT_DATE })\r\nexport const setTotalCount = totalCount => ({ type: SET_TOTAL_COUNT, totalCount })\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const changeActiveMonthAndYear = (year, month) => ({ type: CHANGE_ACTIVE_MONTH_AND_YEAR, year, month })\r\nexport const changeSettings = settings => ({ type: CHANGE_SETTINGS, settings })\r\nexport const synchronizeRecordListFromLocalStorage = recordList => ({ type: SYNCHRONIZE_RECORD_LIST_FROM_LOCAL_STORAGE, recordList })\r\n\r\n\r\nconst initialValue = {\r\n    currentDate: currentDate(),\r\n    activeDate: currentDate(),\r\n    dateNamesList: {\r\n        days: ['Вс', 'Пн' , 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        monthsForDay: ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря']\r\n    },\r\n    records: [\r\n        { id: 0, date: '2021.3.20', text: 'Купить хлеб', time: '11:00', completed: false },\r\n        { id: 1, date: '2021.3.23', text: 'Купить молоко', time: '12:00', completed: false },\r\n        { id: 2, date: '2021.3.23', text: 'Купить масло', time: '12:00', completed: false },\r\n        { id: 3, date: '2021.3.23', text: 'Спасти Вселенную', time: '13:00', completed: true },\r\n        { id: 4, date: '2021.3.23', text: 'Пропылесосить в будке у пса', time: '15:30', completed: false },\r\n        { id: 5, date: '2021.3.20', text: 'Купить квартиру', time: '11:00', completed: false },\r\n        { id: 6, date: '2021.3.19', text: 'Купить машину', time: '12:00', completed: true },\r\n        { id: 7, date: '2021.3.22', text: 'Купить булку', time: '12:00', completed: false },\r\n        { id: 8, date: '2021.3.21', text: 'Спасти Вселенную ещё раз', time: '13:00', completed: true },\r\n        { id: 9, date: '2021.3.20', text: 'Покормить кроликов', time: '15:30', completed: false },\r\n        { id: 10, date: '2021.3.26', text: 'Сьесть кроликов', time: '15:30', completed: false },\r\n    ],\r\n    settings: {\r\n        filter: 'all',\r\n        sort: 'lastAdded'\r\n    },\r\n    totalCount: 0,\r\n    countOnPage: 5,\r\n    currentPage: 1,\r\n    portionsSize: 10,\r\n}\r\n\r\nconst calendarReducer = (state = initialValue, action) => {\r\n    switch(action.type){\r\n        case CHANGE_ACTIVE_MONTH: {\r\n            return {\r\n                ...state,\r\n                activeDate: {\r\n                    ...state.activeDate, \r\n                    month: \r\n                        action.month < 0 ? 11\r\n                        : action.month > 11 ? 0\r\n                        : action.month,\r\n                    year: \r\n                        action.month < 0 ? state.activeDate.year - 1 \r\n                        : action.month > 11 ? state.activeDate.year + 1 \r\n                        : state.activeDate.year\r\n                }\r\n            }\r\n        }\r\n        case CHANGE_COMPLETED_STATUS_OF_RECORD: {\r\n            const newRecords = [...state.records.map(record => {\r\n                if(record.id === action.id){\r\n                    record.completed = action.status\r\n                }\r\n                return record\r\n            })]\r\n            addToLocalStore('records', newRecords)\r\n\r\n            return {\r\n                ...state,\r\n                records: newRecords\r\n            }\r\n        }\r\n        case DELETE_RECORD: {\r\n            const recordsWithoutDelete = state.records.filter(record => record.id !== action.id)\r\n            addToLocalStore('records', recordsWithoutDelete)\r\n            return {\r\n                ...state,\r\n                records: recordsWithoutDelete\r\n            }\r\n        }\r\n        case ADD_NEW_RECORD: {\r\n            const recordsWithNewRecord = [...state.records, action.record]\r\n            addToLocalStore('records', recordsWithNewRecord)\r\n            return {\r\n                ...state,\r\n                records: recordsWithNewRecord\r\n            }\r\n        }\r\n        case CHANGE_ACTIVE_DATE_TO_CURRENT_DATE: {\r\n            return {\r\n                ...state,\r\n                activeDate: state.currentDate\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case CHANGE_ACTIVE_MONTH_AND_YEAR: {\r\n            return {\r\n                ...state,\r\n                activeDate: {...state.activeDate, year: action.year, month: action.month}\r\n            }\r\n        }\r\n        case CHANGE_SETTINGS: {\r\n            return {\r\n                ...state,\r\n                settings: {\r\n                    ...action.settings\r\n                }\r\n            }\r\n        }\r\n        case SYNCHRONIZE_RECORD_LIST_FROM_LOCAL_STORAGE: {\r\n            return {\r\n                ...state,\r\n                records: action.recordList || []\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default calendarReducer","import { useEffect } from \"react\"\r\nimport { compose } from \"redux\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport s from './Search.module.css'\r\n\r\n\r\nconst Search = ({ months, initialize, activeDate, handleSubmit }) => {\r\n\r\n    useEffect(() => {\r\n        initialize({ year: activeDate.year, month: activeDate.month })\r\n    }, [activeDate])\r\n    \r\n    const options = months.map((month, i) => <option value={i} key={i} >{month}</option>)\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <h2 className={s.header}>Найти месяц:</h2>\r\n            <Field component='input' type=\"number\" name='year' className={s.input} placeholder='Год'/>\r\n            <Field component='select' name='month' className={s.input} >\r\n                {options}\r\n            </Field>\r\n            <button type='submit' className={s.btn} >Перейти</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    reduxForm({ form: 'search' })\r\n)(Search)","import './Menu.css'\r\nimport s from './Menu.module.css'\r\nimport React from \"react\"\r\nimport { toast } from 'react-toastify'\r\nimport { changeActiveDateToCurrentDate, changeActiveMonthAndYear } from '../../Redux/calendarReducer'\r\nimport { connect } from 'react-redux'\r\nimport { elastic as Nav } from 'react-burger-menu'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Search from './Search/Search'\r\n\r\n\r\nclass Menu extends React.Component{\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          menuOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      toast.configure()\r\n    }\r\n\r\n    handleStateChange = (state) => {\r\n      this.setState({menuOpen: state.isOpen})  \r\n    }\r\n      \r\n    closeMenu = () => {\r\n      this.setState({menuOpen: false})\r\n    }\r\n\r\n    getCurrentDate = () => {\r\n      this.props.changeActiveDateToCurrentDate()\r\n      this.closeMenu()\r\n    }\r\n\r\n    onSubmit = (formData) => {\r\n      if(formData.year){\r\n        this.props.changeActiveMonthAndYear(+formData.year, +formData.month)\r\n        this.closeMenu()\r\n      }else{\r\n        this.getToast('Ошибка! Введите год!', false)\r\n      }\r\n    }\r\n\r\n    getToast = (text, success) => {\r\n      const options = { autoClose: 3000 }\r\n      success ? toast.success(text, options) : toast.error(text, options)\r\n    }\r\n\r\n    onStateChange = (state) => this.handleStateChange(state)\r\n\r\n    getLinkAdressForTodayTasks = () => {\r\n        const date = new Date()\r\n        return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n          <Nav \r\n            isOpen={this.state.menuOpen}\r\n            onStateChange={this.handleStateChange}\r\n            customBurgerIcon={<img src='./menu.svg' alt='Menu'/>}\r\n            outerContainer={this.props.outerContainer}\r\n            pageWrapId={this.props.pageWrapId}\r\n          >\r\n            <button className={s.btn} onClick={this.getCurrentDate}>К текущему месяцу</button>\r\n            <NavLink className={s.btn} onClick={() => this.closeMenu()} to={`/day/${this.getLinkAdressForTodayTasks()}`}>Задачи на сегодня</NavLink>\r\n            <NavLink className={s.btn} onClick={() => this.closeMenu()} to='/taskList'>Список всех задач</NavLink>\r\n            <Search months={this.props.months} activeDate={this.props.activeDate} onSubmit={this.onSubmit}/>\r\n          </Nav>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    activeDate: state.calendar.activeDate,\r\n    currentDate: state.calendar.currentDate\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeActiveDateToCurrentDate, changeActiveMonthAndYear })(Menu)","import { connect } from \"react-redux\"\r\nimport Table from \"./Table/Table\"\r\nimport { changeActiveMonth } from '../../Redux/calendarReducer'\r\nimport Menu from \"../Menu/Menu\"\r\n\r\nconst Calendar = ({ currentDate, activeDate, dateNamesList, changeActiveMonth, records }) => {\r\n    const lastDayNumberOfActiveMonth = new Date(activeDate.year, activeDate.month + 1 , 0).getDate()\r\n    const firstDayOfActiveMonth = new Date(activeDate.year, activeDate.month, 1).getDay()\r\n\r\n    return (\r\n        <div id='outerContainer'>\r\n            <Menu outerContainer={'outerContainer'} pageWrapId={'wrapper'} months={dateNamesList.months} activeDate={activeDate} />\r\n            <div id='wrapper'>\r\n                <Table \r\n                    activeDate={activeDate}\r\n                    dateNamesList={dateNamesList} \r\n                    firstDayOfActiveMonth={firstDayOfActiveMonth} \r\n                    lastDayNumberOfActiveMonth={lastDayNumberOfActiveMonth}\r\n                    changeActiveMonth={changeActiveMonth}\r\n                    records={records}\r\n                    currentDate={currentDate}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentDate: state.calendar.currentDate,\r\n    activeDate: state.calendar.activeDate,\r\n    dateNamesList: state.calendar.dateNamesList,\r\n    records: state.calendar.records\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeActiveMonth })(Calendar)","export default date => {\r\n    date = date.split('.')\r\n    date[1] = +date[1] - 1\r\n    date = date.join('.')\r\n    return date\r\n}","import s from './TaskItem.module.css'\r\n\r\nconst TaskItem = ({ task, changeCompletedStatusOfRecord, deleteRecord, getToast }) => {\r\n    const checkboxHandler = () => {\r\n        changeCompletedStatusOfRecord(task.id, !task.completed)\r\n    }\r\n    const deleteItem = () => {\r\n        deleteRecord(task.id)\r\n        getToast('Запись успешно удалена!', true)\r\n    }\r\n    return (\r\n        <tr className={task.completed ? s.completed : s.notCompleted}>\r\n            <td>\r\n                <input className='form-check-input' onChange={checkboxHandler} checked={task.completed} type='checkbox'/>\r\n            </td>\r\n            <td>\r\n                {task.text}\r\n            </td>\r\n            <td>\r\n                {task.time}\r\n            </td>\r\n            <td>\r\n                <button onClick={deleteItem} className={s.remove}></button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TaskItem","import s from './TasksTable.module.css'\r\n\r\nconst TasksTable = ({tasks}) => {\r\n    return (\r\n        <>  \r\n            <table className={s.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <td className={s.status}>Статус</td>\r\n                        <td>Задача</td>\r\n                        <td>Время</td>\r\n                        <td>Удалить</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TasksTable","export default (dateProp, plusMode) => {\r\n    const [year, month, day] = dateProp.split('.')\r\n\r\n    let date\r\n    if(plusMode){\r\n        date = new Date(year, month, +day + 1)\r\n    }else{\r\n        date = new Date(year, month, +day - 1)\r\n    }\r\n    const resYear = date.getFullYear()\r\n    const resMonth = date.getMonth()\r\n    const resDay = date.getDate()\r\n    return `/day/${resYear}.${+resMonth + 1}.${resDay}`\r\n}","import { NavLink } from 'react-router-dom'\r\nimport datePanelChangeDay from '../../../helpers/datePanelChangeDay'\r\nimport s from './DatePanel.module.css'\r\n\r\nconst DatePanel = ({ date, monthNames }) => {\r\n    const [year, month, day] = date.split('.')\r\n    return (\r\n        <header className={s.header}>\r\n            <NavLink className={s.calendar} to='/'></NavLink>\r\n            <div className={s.main}>\r\n                <NavLink className={s.arrPrev} to={datePanelChangeDay(date, false)}></NavLink>\r\n                <span className={s.date}>{`${day} ${monthNames[+month]} ${year}`}</span>\r\n                <NavLink className={s.arrNext} to={datePanelChangeDay(date, true)}></NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default DatePanel","import s from './TaskForm.module.css'\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst TaskForm = ({ handleSubmit }) => {\r\n    return (\r\n        <>\r\n            <a className={s.btnCollapsed} data-bs-toggle=\"collapse\" href=\"#form\" role=\"button\" aria-expanded=\"false\" aria-controls=\"form\">+</a>\r\n            <div className='collapse' id='form'>\r\n                <form onSubmit={handleSubmit} className={s.form + ' card card-body'}>\r\n                    <div className=\"form-floating mb-3\">\r\n                        <Field component='input' type=\"text\" name='task' className={s.input + ' form-control'} id=\"task\" placeholder=\"Задача\"/>\r\n                        <label htmlFor=\"task\">Новая задача</label>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                        <Field component='input' name='time' type=\"time\" className={s.input + ' form-control'} id=\"time\" placeholder=\"Время\"/>\r\n                        <label htmlFor=\"time\">Время</label>\r\n                    </div>\r\n                    <button className={s.submit} type=\"submit\">Сохранить</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    reduxForm({ form: 'add-task' })\r\n)(TaskForm)\r\n","import TasksTable from \"./TasksTable/TasksTable\"\r\nimport DatePanel from \"./DatePanel/DatePanel\"\r\nimport TaskForm from \"./TaskForm/TaskForm\"\r\nimport s from './Day.module.css'\r\n\r\n\r\nconst Day = ({ dateNamesList, onSubmit, tasks, correctDate }) => {\r\n    return (\r\n        <div id='wrapper'>\r\n            <DatePanel date={correctDate} monthNames={dateNamesList.monthsForDay} />\r\n            {\r\n                tasks.length \r\n                    ? <TasksTable tasks={tasks}/>\r\n                    : <p className={s.noTasks}>Задач на этот день пока нет. Добавьте первую.</p>\r\n            }\r\n            <TaskForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day","import { connect } from \"react-redux\"\r\nimport dateMonthMinusOne from \"../../helpers/dateMonthMinusOne\"\r\nimport { addNewRecord, changeCompletedStatusOfRecord, deleteRecord } from \"../../Redux/calendarReducer\"\r\nimport TaskItem from \"./TaskItem/TaskItem\"\r\nimport { reset } from 'redux-form'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useEffect } from \"react\"\r\nimport Day from \"./Day\"\r\n\r\n\r\nconst DayContainer = ({ location, records, dateNamesList, changeCompletedStatusOfRecord, deleteRecord, addNewRecord, reset }) => {\r\n    useEffect(() => {\r\n        toast.configure()\r\n    }, [])\r\n\r\n    const getToast = (text, success) => {\r\n        const options = { autoClose: 3000 }\r\n        success ? toast.success(text, options) : toast.error(text, options)\r\n    }\r\n\r\n    const [path, date] = location.pathname.match(/\\/day\\/(.+)/)\r\n    const correctDate = dateMonthMinusOne(date)\r\n\r\n    const tasks = records\r\n        .filter(task => task.date === correctDate)\r\n        .map(task => <TaskItem \r\n            key={task.id} \r\n            task={task} \r\n            changeCompletedStatusOfRecord={changeCompletedStatusOfRecord} \r\n            deleteRecord={deleteRecord}\r\n            getToast={getToast}\r\n        />)\r\n\r\n    const onSubmit = formData => {\r\n        if(formData.task && formData.time){\r\n            addNewRecord({\r\n                id: Date.now(),\r\n                text: formData.task,\r\n                time: formData.time,\r\n                completed: false,\r\n                date: correctDate\r\n            })\r\n            getToast('Запись успешно добавлена!', true)\r\n            reset('add-task')\r\n        }else{\r\n            getToast('Ошибка! Заполните все поля!', false)\r\n        }\r\n    }\r\n\r\n    return <Day dateNamesList={dateNamesList} onSubmit={onSubmit} tasks={tasks} correctDate={correctDate} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    records: state.calendar.records,\r\n    dateNamesList: state.calendar.dateNamesList\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeCompletedStatusOfRecord, deleteRecord, addNewRecord, reset })(DayContainer)","import { NavLink } from 'react-router-dom'\r\nimport s from './TaskListHeader.module.css'\r\n\r\nconst TaskListHeader = ({ time, date }) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <NavLink className={s.toCalendar} to='/'></NavLink>\r\n            <div className={s.date}>{`${date} | ${time}`}</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default TaskListHeader","import s from './TaskListTable.module.css'\r\n\r\nconst TaskListTable = ({ tasks }) => {\r\n    return (\r\n        <table className={s.table}>\r\n            <thead>\r\n                <tr>\r\n                    <td>Статус</td>\r\n                    <td>Задача</td>\r\n                    <td>Дата</td>\r\n                    <td>Время</td>\r\n                    <td>Удалить</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tasks}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TaskListTable","import s from '../../Day/TaskForm/TaskForm.module.css'\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst TaskListForm = ({ handleSubmit }) => {\r\n    return (\r\n        <>\r\n            <a className={s.btnCollapsed} data-bs-toggle=\"collapse\" href=\"#form\" role=\"button\" aria-expanded=\"false\" aria-controls=\"form\">+</a>\r\n            <div className='collapse' id='form'>\r\n                <form onSubmit={handleSubmit} className={s.form + ' card card-body'}>\r\n                    <div className=\"form-floating mb-3\">\r\n                        <Field component='input' type=\"text\" name='task' className={s.input + ' form-control'} id=\"task\" placeholder=\"Задача\"/>\r\n                        <label htmlFor=\"task\">Новая задача</label>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                        <Field component='input' name='date' type=\"date\" className={s.input + ' form-control'} id=\"date\" placeholder=\"Дата\"/>\r\n                        <label htmlFor=\"date\">Дата</label>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                        <Field component='input' name='time' type=\"time\" className={s.input + ' form-control'} id=\"time\" placeholder=\"Время\"/>\r\n                        <label htmlFor=\"time\">Время</label>\r\n                    </div>\r\n                    <button className={s.submit} type=\"submit\">Сохранить</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    reduxForm({ form: 'add-task-list' })\r\n)(TaskListForm)\r\n","import { Field } from \"redux-form\"\r\nimport s from '../TaskListSetting.module.css'\r\n\r\n\r\nconst TaskListFilter = () => {\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.header}>Показать задачи: </div>\r\n            <div className='form-check'>\r\n                <Field value='all' name='filter' component='input' type='radio' id='all' className='form-check-input'/>\r\n                <label className=\"form-check-label\" for=\"all\">Все</label>\r\n            </div>\r\n            <div className='form-check'>\r\n                <Field value='completed' name='filter' component='input' type='radio' id='completed' className='form-check-input'/>\r\n                <label className=\"form-check-label\" for=\"completed\">Завершенные</label>\r\n            </div>\r\n            <div className='form-check'>\r\n                <Field value='notCompleted' name='filter' component='input' type='radio' id='notCompleted' className='form-check-input'/>\r\n                <label className=\"form-check-label\" for=\"notCompleted\">Незавершенные</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskListFilter","import { Field } from \"redux-form\"\r\nimport s from '../TaskListSetting.module.css'\r\n\r\n\r\nconst TaskListSort = () => {\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.header}>Сортировать по:</div>\r\n            <Field name='sort' className={`form-select ${s.select}`} component='select'>\r\n                <option value='lastAdded'>Последние добавления</option>\r\n                <option value='old'>Сначала старые</option>\r\n                <option value='new'>Сначала новые</option>\r\n            </Field>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskListSort","import { useEffect } from 'react'\r\nimport { compose } from 'redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport TaskListFilter from './TaskListFilter/TaskListFilter'\r\nimport s from './TaskListSetting.module.css'\r\nimport TaskListSort from './TaskListSort/TaskListSort'\r\n\r\nconst TaskListSetting = ({ initialize, handleSubmit, tasks }) => {\r\n\r\n    useEffect(() => {\r\n        initialize({ filter: 'all', sort: 'lastAdded' })\r\n    }, [])\r\n\r\n    if(!tasks.length){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <a className={s.btnToggle} data-bs-toggle=\"collapse\" href=\"#setting\" role=\"button\" aria-expanded=\"false\" aria-controls=\"setting\"></a>\r\n            <div className='collapse' id='setting'>\r\n                <form onSubmit={handleSubmit} className={s.form} >\r\n                    <div className={s.flex}>\r\n                        <TaskListFilter/>\r\n                        <TaskListSort/>\r\n                    </div>\r\n                    <button className={s.btn} type='submit'>Принять</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    reduxForm({ form: 'settings' })\r\n)(TaskListSetting)","import s from './Pagination.module.css'\r\n\r\nconst Pagination = ({ paginations, currentPortion, changeCurrentPortion, totalPortionsCount, leftPointPortion, rightPointPortion }) => {\r\n\r\n    if(!paginations.length){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n            { currentPortion > 1 && <button className={`${s.btn} ${s.portionChange} ${s.prev}`} onClick={() => { changeCurrentPortion(currentPortion - 1) }}></button> }\r\n            {paginations.filter( (btn, i) => i + 1 >= leftPointPortion && i+1 <= rightPointPortion )}\r\n            { currentPortion < totalPortionsCount && <button className={`${s.btn} ${s.portionChange}`} onClick={() => { changeCurrentPortion(currentPortion + 1) }}></button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import { useState } from \"react\";\r\nimport Pagination from \"./Pagination\"\r\nimport s from './Pagination.module.css'\r\n\r\n\r\nconst PaginationContainer = ({ totalCount, countOnPage, portionsSize, currentPage, setCurrentPage }) => {\r\n\r\n    const pagesCount = Math.ceil(totalCount / countOnPage)\r\n    let paginations = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        paginations.push(<button\r\n            key={i}\r\n            className={currentPage === i ? `${s.btn} ${s.active}` : `${s.btn}`}\r\n            onClick={() => { setCurrentPage(i) }}\r\n             >{i}</button>);\r\n    }\r\n    \r\n    const totalPortionsCount = pagesCount / portionsSize\r\n    const [currentPortion, changeCurrentPortion] = useState(1)\r\n    const leftPointPortion = (currentPortion - 1) * portionsSize + 1\r\n    const rightPointPortion = currentPortion * portionsSize\r\n\r\n    return <Pagination \r\n        paginations={paginations} \r\n        currentPortion={currentPortion} \r\n        changeCurrentPortion={changeCurrentPortion} \r\n        totalPortionsCount={totalPortionsCount} \r\n        leftPointPortion={leftPointPortion}\r\n        rightPointPortion={rightPointPortion}\r\n        />\r\n}\r\n\r\nexport default PaginationContainer","import TaskListHeader from \"./TaskListHeader/TaskListHeader\"\r\nimport TaskListTable from \"./TaskListTable/TaskListTable\"\r\nimport s from './TaskList.module.css'\r\nimport TaskListForm from \"./TaskListForm/TaskListForm\"\r\nimport TaskListSetting from \"./TaskListSetting/TaskListSetting\"\r\nimport PaginationContainer from \"../common/Pagination/PaginationContainer\"\r\n\r\nconst TaskList = ({ totalCount, currentPage, portionsSize, countOnPage, setCurrentPage, date, time, onSubmitSetting, tasks, onSubmit }) => {\r\n    return (\r\n        <div id='wrapper'>\r\n            <TaskListHeader time={time} date={date} />\r\n            <TaskListSetting onSubmit={onSubmitSetting} tasks={tasks}/>\r\n            <PaginationContainer\r\n                totalCount={totalCount} \r\n                countOnPage={countOnPage} \r\n                currentPage={currentPage} \r\n                portionsSize={portionsSize}\r\n                setCurrentPage={setCurrentPage}\r\n            />\r\n            {tasks.length ? <TaskListTable tasks={tasks} /> : <div className={s.noRecords}> Задач пока нет. Добавьте первую. </div>}\r\n            <TaskListForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList","// export default date => {\r\n//     const dateArr = date.split('.')\r\n//     const result = dateArr.forEach(dateEl => {\r\n//         if(dateEl[0] === 0){\r\n//             dateEl = dateEl[1]\r\n//         }\r\n//         return dateEl\r\n//     })\r\n//     return result\r\n// }\r\n\r\nexport default date => {\r\n    const dateArr = date.split('.')\r\n    const resultDate = dateArr.map(el => +el);\r\n    return resultDate.join('.')\r\n}","export default time => {\r\n    const timeArr = time.split(':')\r\n    const modernizedTimeArr = timeArr.map(timeItem => +timeItem < 10 ? '0' + timeItem : timeItem)\r\n    return modernizedTimeArr.join(':')\r\n}","export default date => {\r\n    const dateArr = date.split('.').reverse()\r\n    const resultDate = dateArr.map(el => +el <= 9 ? '0' + el : el);\r\n    return resultDate.join('.')\r\n}","import { NavLink } from 'react-router-dom'\r\nimport addZeroToDate from '../../../helpers/addZeroToDate'\r\nimport dateMonthPlusOne from '../../../helpers/dateMonthPlusOne'\r\nimport s from '../../Day/TaskItem/TaskItem.module.css'\r\n\r\nconst TaskListItem = ({ id, completed, text, date, time, changeCompletedStatusOfRecord, deleteRecord, getToast, setTotalCount, recordsLength }) => {\r\n\r\n    const checkboxHandler = () => {\r\n        changeCompletedStatusOfRecord(id, !completed)\r\n    }\r\n\r\n    const deleteTask = () => {\r\n        deleteRecord(id)\r\n        getToast('Запись успешно удалена!', true)\r\n    }\r\n\r\n    const correctDate = dateMonthPlusOne(date)\r\n    const correctDateToShow = addZeroToDate(correctDate)\r\n\r\n    return (\r\n        <tr className={completed ? s.completed : s.notCompleted} >\r\n            <td>\r\n                <input className='form-check-input' onChange={checkboxHandler} checked={completed} type='checkbox'/>\r\n            </td>\r\n            <td>{text}</td>\r\n            <td>\r\n                <NavLink className={s.link} to={`/day/${correctDate}`}>{correctDateToShow}</NavLink>\r\n            </td>\r\n            <td>{time}</td>\r\n            <td>\r\n                <button className={s.remove} onClick={deleteTask} ></button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TaskListItem","export default date => {\r\n    date = date.split('.')\r\n    date[1] = +date[1] + 1\r\n    date = date.join('.')\r\n    return date\r\n}","import TaskList from \"./TaskList\"\r\nimport { changeCompletedStatusOfRecord, deleteRecord, setTotalCount, setCurrentPage, addNewRecord, changeSettings } from '../../Redux/calendarReducer'\r\nimport { toast } from 'react-toastify'\r\nimport { useEffect, useState } from \"react\"\r\nimport { reset } from \"redux-form\"\r\nimport dateMonthMinusOne from \"../../helpers/dateMonthMinusOne\"\r\nimport removeZeroFromDate from \"../../helpers/removeZeroFromDate\"\r\nimport addZeroToTime from \"../../helpers/addZeroToTime\"\r\nimport mergeRecordsForPagination from \"../../helpers/mergeRecordsForPagination\"\r\nimport addZeroToDate from \"../../helpers/addZeroToDate\"\r\nimport TaskListItem from \"./TaskListItem/TaskListItem\"\r\nimport { connect } from \"react-redux\"\r\nimport filterAndSortRecords from \"../../helpers/filterAndSortRecords\"\r\n\r\n\r\nconst TaskListContainer = ({ records, changeCompletedStatusOfRecord, deleteRecord, totalCount, setTotalCount, currentPage, portionsSize, countOnPage, setCurrentPage, reset, addNewRecord, filter, changeSettings, sort }) => {\r\n\r\n    useEffect(() => {\r\n        toast.configure()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTotalCount(filteredRecords.length)\r\n    }, [records, filter])\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(Math.ceil(filteredRecords.length / countOnPage))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!tasksWithPaginationClassify[currentPage - 1]){\r\n            setCurrentPage(Math.ceil(filteredRecords.length / countOnPage))\r\n        }\r\n    }, [totalCount])\r\n\r\n    useEffect(() => {\r\n        if(sort === 'lastAdded'){\r\n            setCurrentPage(Math.ceil(filteredRecords.length / countOnPage))\r\n        }\r\n    }, [sort, filter])\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n                setTime(addZeroToTime(`${new Date().getHours()}:${new Date().getMinutes()}`))\r\n                if(date !== addZeroToDate(`${new Date().getFullYear()}.${new Date().getMonth() + 1}.${new Date().getDate()}`)){\r\n                    setDate(addZeroToDate(`${new Date().getFullYear()}.${new Date().getMonth() + 1}.${new Date().getDate()}`))\r\n                }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [])\r\n\r\n    const getToast = (text, success) => {\r\n        const options = { autoClose: 3000 }\r\n        success ? toast.success(text, options) : toast.error(text, options)\r\n    }\r\n\r\n    const filteredRecords = filterAndSortRecords(records, filter, sort)\r\n    const tasksWithPaginationClassify = mergeRecordsForPagination(filteredRecords, countOnPage)\r\n    const tasks = tasksWithPaginationClassify[currentPage - 1] ? tasksWithPaginationClassify[currentPage - 1]\r\n        .map(record => <TaskListItem \r\n                            key={record.id}\r\n                            id={record.id}\r\n                            date={record.date}\r\n                            text={record.text}\r\n                            time={record.time}\r\n                            completed={record.completed}\r\n                            changeCompletedStatusOfRecord={changeCompletedStatusOfRecord}\r\n                            deleteRecord={deleteRecord}\r\n                            getToast={getToast}\r\n                            setTotalCount={setTotalCount}\r\n                            recordsLength={records.length}\r\n                        />) : []\r\n\r\n    const onSubmit = formData => {\r\n        if(formData.task && formData.time){\r\n            const date = formData.date.split('-').join('.')\r\n            addNewRecord({\r\n                id: Date.now(),\r\n                text: formData.task,\r\n                time: formData.time,\r\n                date: removeZeroFromDate(dateMonthMinusOne(date)),\r\n                completed: false,\r\n            })\r\n            getToast('Запись успешно добавлена!', true)\r\n            reset('add-task-list')\r\n        }else{\r\n            getToast('Ошибка! Заполните все поля!', false)\r\n        }\r\n    }\r\n\r\n    const [time, setTime] = useState(addZeroToTime(`${new Date().getHours()}:${new Date().getMinutes()}`))\r\n    const [date, setDate] = useState(addZeroToDate(`${new Date().getFullYear()}.${new Date().getMonth() + 1}.${new Date().getDate()}`))\r\n\r\n    const onSubmitSetting = formData => {\r\n        changeSettings(formData)\r\n        if(formData.sort === 'lastAdded'){\r\n            if(filteredRecords.length){\r\n                setCurrentPage(Math.ceil(filteredRecords.length / countOnPage))\r\n            }\r\n        }else{\r\n            if(filteredRecords.length){\r\n                setCurrentPage(1)\r\n            }\r\n        }\r\n        getToast('Настройки успешно применены!', true)\r\n    }\r\n\r\n    return <TaskList\r\n        portionsSize={portionsSize}\r\n        totalCount={totalCount}\r\n        currentPage={currentPage}\r\n        countOnPage={countOnPage}\r\n        setCurrentPage={setCurrentPage}\r\n        date={date}\r\n        time={time}\r\n        onSubmitSetting={onSubmitSetting}\r\n        tasks={tasks}\r\n        onSubmit={onSubmit}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    records: state.calendar.records,\r\n    totalCount: state.calendar.totalCount,\r\n    currentPage: state.calendar.currentPage,\r\n    portionsSize: state.calendar.portionsSize,\r\n    countOnPage: state.calendar.countOnPage,\r\n    currentDate: state.calendar.currentDate,\r\n    filter: state.calendar.settings.filter,\r\n    sort: state.calendar.settings.sort\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeCompletedStatusOfRecord, deleteRecord, setTotalCount, setCurrentPage, reset, addNewRecord, changeSettings })(TaskListContainer)","export default (records, filter, sort) => {\r\n    const filteredRecords = records\r\n        .filter(record => {\r\n            switch(filter){\r\n                case 'all': {\r\n                    return record\r\n                }\r\n                case 'completed' :{\r\n                    return record.completed\r\n                }\r\n                case 'notCompleted' :{\r\n                    return !record.completed\r\n                }\r\n                default: return record\r\n            }\r\n        })\r\n\r\n    const filteredAndSortedRecords = filteredRecords\r\n        .sort((a, b) => {\r\n            switch(sort){\r\n                case 'lastAdded': {\r\n                    return a.id - b.id\r\n                }\r\n                case 'old': {\r\n                    return +a.date.split('.').join('') - +b.date.split('.').join('')\r\n                }\r\n                case 'new': {\r\n                    return +b.date.split('.').join('') - +a.date.split('.').join('')\r\n                }\r\n                default: return a - b\r\n            }\r\n        })\r\n        \r\n    return filteredAndSortedRecords\r\n}\r\n","export default (records, portionCount) => {\r\n    let obj = Object.assign(records)\r\n    const countIteration = Math.ceil(records.length / portionCount)\r\n    const res = []\r\n    for(let i = 1; i <= countIteration; i++){\r\n        res[i - 1] = []\r\n        for(let j = 0; j <= portionCount - 1; j++){\r\n            if(obj[j]){\r\n                res[i - 1].push(obj[j])\r\n            }\r\n        }\r\n        obj = obj.filter((item, i) => i > portionCount - 1)\r\n    }\r\n    return res\r\n}","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport './App.css';\nimport Calendar from './Components/Calendar/Calendar';\nimport DayContainer from './Components/Day/DayContainer';\nimport TaskListContainer from './Components/TaskList/TaskListContainer';\nimport { getFromLocalStore } from './localStore/localStore';\nimport { synchronizeRecordListFromLocalStorage } from './Redux/calendarReducer';\n\nconst App = ({ synchronizeRecordListFromLocalStorage }) => {\n\n  useEffect(() => {\n    synchronizeRecordListFromLocalStorage(getFromLocalStore('records'))\n  }, [])\n\n  return (\n    <div id='app'>\n      <Route path='/' exact component={Calendar}/>\n      <Route path='/day' component={DayContainer}/>\n      <Route path='/taskList' component={TaskListContainer}/>\n    </div>\n  );\n}\n\nexport default compose(\n  connect(null, { synchronizeRecordListFromLocalStorage }),\n  withRouter\n)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, compose, createStore } from \"redux\";\r\nimport calendarReducer from \"./calendarReducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nconst redusers = combineReducers({\r\n    calendar: calendarReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers())\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Redux/reduxStore';\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Item_cell__l2BYF\",\"tdChild\":\"Item_tdChild__15a2U\",\"day\":\"Item_day__2pxPU\",\"current\":\"Item_current__3LHwn\",\"link\":\"Item_link__14cbN\",\"deadline\":\"Item_deadline__3fpvP\",\"mobile\":\"Item_mobile__3eF8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notCompleted\":\"TaskItem_notCompleted__1oBMx\",\"completed\":\"TaskItem_completed__2QfpC\",\"remove\":\"TaskItem_remove__3lURE\",\"link\":\"TaskItem_link__UT8fW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"DatePanel_header__1IqLJ\",\"main\":\"DatePanel_main__iMjuS\",\"date\":\"DatePanel_date___Rq7x\",\"calendar\":\"DatePanel_calendar__1sMph\",\"arrPrev\":\"DatePanel_arrPrev__2NJ7e\",\"arrNext\":\"DatePanel_arrNext__3IYoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tbody\":\"Body_tbody__1jpFL\",\"list\":\"Body_list__1eh4c\",\"completed\":\"Body_completed__18b1I\",\"end\":\"Body_end__2rWfJ\",\"completedUl\":\"Body_completedUl__dkRtz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Search_form__MkIy2\",\"input\":\"Search_input__2rnvp\",\"btn\":\"Search_btn__3nvBO\",\"header\":\"Search_header__A_BiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Menu_btn__HAepz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TaskListHeader_header__6-Dcy\",\"toCalendar\":\"TaskListHeader_toCalendar__2H1AO\",\"date\":\"TaskListHeader_date__1UeD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TasksTable_table__2DJx5\"};"],"sourceRoot":""}